Index: src/net/handytrack/statusupdater/DeliveryMan.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package net.handytrack.statusupdater;\r\nimport javax.swing.*;\r\nimport javax.swing.table.*;\r\nimport java.awt.*;\r\nimport com.formdev.flatlaf.intellijthemes.materialthemeuilite.*;\r\nimport net.handytrack.database.DBmanipulation;\r\nimport net.handytrack.database.DBquery;\r\n\r\nimport java.sql.*;\r\nimport java.awt.event.*;\r\nimport java.time.format.*;\r\nimport java.time.*;\r\n\r\npublic class DeliveryMan implements ActionListener, ItemListener {\r\n    private JFrame fr;\r\n    private JTable table;\r\n    private DefaultTableModel model;\r\n    private JComboBox statussort;\r\n    private JScrollPane scrollPane;\r\n    private JPanel pn1, pn2, blank1, blank2;\r\n    private JButton done, search, sdefault;\r\n    private JTextField searchtf;\r\n    private JLabel lb1, lb2;\r\n    private StatusChanger sc;\r\n    private String selectSort, time, timereceive, timesort, timetransit, timedelivery, timecomplete;\r\n\r\n    public DeliveryMan() {\r\n        fr = new JFrame(\"Delivery Status Updater\");\r\n        statussort = new JComboBox();\r\n        statussort.addItem(\"-\");\r\n        statussort.addItem(\"Receive\");\r\n        statussort.addItem(\"Sorting\");\r\n        statussort.addItem(\"In Transit\");\r\n        statussort.addItem(\"Delivery\");\r\n        statussort.addItem(\"Complete\");\r\n        statussort.setSelectedIndex(0);\r\n        \r\n        sc = new StatusChanger();\r\n        \r\n        String[] columnNames = {\"Track Num\", \"Receiver\", \"Address\", \"Contact\", \"Status\", \"Action\"};\r\n        model = new DefaultTableModel(columnNames, 0) {\r\n            @Override ///ทำให้ Column อื่นๆที่ไม่ได้ Set ไว้แก้ไขไม่ได้\r\n            public boolean isCellEditable(int row, int column) {\r\n                // Make columns 4 and 5 editable\r\n                return column == 5;\r\n            }\r\n        };\r\n        \r\n        table = new JTable(model);\r\n        scrollPane = new JScrollPane(table);\r\n        pn1 = new JPanel();\r\n        pn2 = new JPanel();\r\n        \r\n        blank1 = new JPanel();\r\n        blank2 = new JPanel();\r\n        fr.add(blank1, BorderLayout.EAST);\r\n        fr.add(blank2, BorderLayout.WEST);\r\n        \r\n        done = new JButton(\"Done!\");        \r\n        \r\n        search = new JButton(\"Seach\");\r\n        sdefault = new JButton(\"Set Default\");\r\n        searchtf = new JTextField(20);\r\n        lb1 = new JLabel(\"Sorted by Name or ID : \");\r\n        lb2 = new JLabel(\"Sorted by Status : \");\r\n         fr.add(pn2, BorderLayout.NORTH);\r\n         pn2.add(lb2);\r\n         pn2.add(statussort);\r\n         pn2.add(lb1);\r\n         pn2.add(searchtf);\r\n         pn2.add(search);\r\n         pn2.add(sdefault);\r\n\r\n\r\n/////////////////////////////////// DateTime /////////////////////////////////////////////\r\n        String sql = \"SELECT * FROM product;\";\r\n        setTable(sql);\r\n        \r\n        \r\n/////////////////////////////// ขนาด Column ของ JTable  ////////////////////////////////\r\n//        table.getColumnModel().getColumn(0).setPreferredWidth(10);\r\n//        table.getColumnModel().getColumn(1).setPreferredWidth(20);\r\n//        table.getColumnModel().getColumn(2).setPreferredWidth(90);\r\n//        table.getColumnModel().getColumn(3).setPreferredWidth(50);\r\n//        table.getColumnModel().getColumn(4).setPreferredWidth(40);\r\n//        table.getColumnModel().getColumn(5).setPreferredWidth(50);\r\n\r\n//        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm:ss\");\r\n//        time = dtf.format(LocalDateTime.now());\r\n//        System.out.println(time);\r\n\r\n//        TableColumn statusColumn = table.getColumnModel().getColumn(4); // Status column index is now 4\r\n//        statusColumn.setCellEditor(new DefaultCellEditor(status));\r\n            \r\n        // Custom TableCellRenderer for button in column 5\r\n        TableColumn deleteColumn = table.getColumnModel().getColumn(5); // Action column index is 5\r\n        deleteColumn.setCellRenderer(new ButtonRenderer());\r\n        deleteColumn.setCellEditor(new ButtonEditor());\r\n\r\n        fr.add(scrollPane, BorderLayout.CENTER);\r\n\r\n        pn1.add(done);\r\n        fr.add(pn1, BorderLayout.SOUTH);\r\n\r\n        fr.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n//        fr.pack();\r\n        fr.setSize(1200, 600);\r\n//        fr.setSize(1920, 1080);\r\n        fr.setVisible(true);\r\n        \r\n/////////////////////////////// Set Font  ////////////////////////////////\r\n        done.setFont(new Font(\"Arial\", Font.BOLD, 14));\r\n        \r\n        search.addActionListener(this);\r\n        sdefault.addActionListener(this);\r\n        statussort.addItemListener(this);\r\n        sc.getDone().addActionListener(this);\r\n        \r\n    }\r\n    \r\n    \r\n    ///////////////////////////// SQL ////////////////////////////////////\r\n    public void setTable(String sql){\r\n        try {\r\n            ResultSet rs = DBquery.getInstance().getSelect(sql);\r\n            while (rs.next()){\r\n//                String id = rs.getString(\"ID\");\r\n                String rname = rs.getString(\"NameR\");\r\n                String radd = rs.getString(\"Road\");\r\n                String dadd = rs.getString(\"District\");\r\n                String padd = rs.getString(\"Province\");\r\n                String zadd = rs.getString(\"Zip\");\r\n                String pnum = rs.getString(\"contactNum\");\r\n                String gstatus = rs.getString(\"Status\");\r\n                String trackn = rs.getString(\"TrackNum\");\r\n                String address = (radd +  \", \" + dadd +  \", \" + padd + \", \" + zadd);\r\n                String[] row = {trackn, rname, address, pnum, gstatus, \"Change\"};\r\n                model.addRow(row);\r\n                }\r\n            } \r\n            catch (Exception e) {\r\n                    e.printStackTrace();\r\n         }\r\n        table.setModel(model);\r\n    }\r\n    \r\n    /////////////////////////////// Get Time for Status Chagner GUI ////////////////////////////////////////////\r\n    public String getSorttime(int state) {\r\n        int selectedRow = table.getSelectedRow();\r\n        String data1 = model.getValueAt(selectedRow, 0).toString();\r\n        String data2 = model.getValueAt(selectedRow, 1).toString();\r\n        String sql = String.format(\"SELECT * FROM product WHERE NameR = '%s' OR ID = '%s'\", data1, data2);\r\n        try {\r\n            ResultSet rs = DBquery.getInstance().getSelect(sql);\r\n            while (rs.next()){\r\n                timereceive = rs.getString(\"ReceiveTime\");\r\n                timesort = rs.getString(\"SortingTime\");\r\n                timetransit = rs.getString(\"InTransitTime\");\r\n                timedelivery = rs.getString(\"DeliveryTime\");\r\n                timecomplete = rs.getString(\"CompleteTime\");\r\n                }\r\n            } \r\n            catch (Exception e) {\r\n                    e.printStackTrace();\r\n         }\r\n        if (state == 1) {\r\n            return timereceive;\r\n        }\r\n        else if (state == 2) {\r\n            return timesort;\r\n        }\r\n        else if (state == 3) {\r\n            return timetransit;\r\n        }\r\n        else if (state == 4) {\r\n            return timedelivery;\r\n        }\r\n        else if (state == 5) {\r\n            return timecomplete;\r\n        } \r\n        return \"Error\";\r\n    }\r\n    \r\n    ///////////////////////////// EVENT (sort function) ////////////////////////////////////\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n        if(e.getSource().equals(search)){\r\n            String kw = searchtf.getText();\r\n            \r\n            if (statussort.getSelectedIndex() == 0) {\r\n                model.setRowCount(0);\r\n                String searchh = String.format(\"SELECT * FROM product WHERE NameR = '%s' OR TrackNum = '%s'\", kw, kw);\r\n                setTable(searchh);\r\n            }\r\n            else if (kw.equals(\"\")) {\r\n                model.setRowCount(0);\r\n                String sql = \"SELECT * FROM product;\";\r\n                setTable(sql);\r\n            }\r\n            else {\r\n                model.setRowCount(0);\r\n                String searchh = String.format(\"SELECT * FROM product WHERE (NameR = '%s' OR TrackNum = '%s') AND Status = '%s'\", kw, kw, selectSort);\r\n                setTable(searchh);\r\n            }\r\n        }\r\n        else if(e.getSource().equals(sdefault)){\r\n            searchtf.setText(\"\");\r\n            statussort.setSelectedIndex(0);\r\n            model.setRowCount(0);\r\n            String sql = \"SELECT * FROM product;\";\r\n            setTable(sql);\r\n            }\r\n        else if(e.getSource().equals(sc.getDone())){\r\n            sc.getFr().dispose(); \r\n            \r\n            int selectedRow = table.getSelectedRow();\r\n            String data1 = model.getValueAt(selectedRow, 0).toString();\r\n            \r\n            if (!sc.getStatus().equals(\"null\")) {\r\n                table.setValueAt(sc.getStatus() , selectedRow, 4);\r\n            }\r\n            else {\r\n                System.out.println(sc.getStatus());\r\n            }\r\n                String sql = String.format(\"UPDATE product SET Status = '%s' WHERE TrackNum = '%s'\", sc.getStatus(), data1);\r\n                DBmanipulation.getInstance().getUpdate(sql);\r\n                DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm:ss\");\r\n                time = dtf.format(LocalDateTime.now());\r\n                \r\n                if (sc.getStatus().equals(\"Receive\")){\r\n                    String statustime = String.format(\"UPDATE trackinfo SET Recieved = '%s' WHERE TrackNum = '%s')\", time, data1);\r\n                    DBmanipulation.getInstance().getUpdate(statustime);\r\n                }\r\n                else if (sc.getStatus().equals(\"Sorting\")){\r\n                    String statustime = String.format(\"UPDATE trackinfo SET Sorting = '%s' WHERE TrackNum = '%s')\", time, data1);\r\n                    DBmanipulation.getInstance().getUpdate(statustime);\r\n                }\r\n                else if (sc.getStatus().equals(\"In Transit\")){\r\n                    String statustime = String.format(\"UPDATE trackinfo SET Transit = '%s' WHERE TrackNum = '%s')\", time, data1);\r\n                    DBmanipulation.getInstance().getUpdate(statustime);\r\n                }\r\n                else if (sc.getStatus().equals(\"Delivery\")){\r\n                    String statustime = String.format(\"UPDATE trackinfo SET Delivery = '%s' WHERE TrackNum = '%s')\", time, data1);\r\n                    DBmanipulation.getInstance().getUpdate(statustime);\r\n                }\r\n                else if (sc.getStatus().equals(\"Complete\")){\r\n                    String statustime = String.format(\"UPDATE trackinfo SET Finish = '%s' WHERE TrackNum = '%s')\", time, data1);\r\n                    DBmanipulation.getInstance().getUpdate(statustime);\r\n                }\r\n                \r\n        }\r\n    }\r\n    \r\n    @Override\r\n    public void itemStateChanged(ItemEvent e) {\r\n        if (e.getStateChange() == ItemEvent.SELECTED) {\r\n//            String selectSort = (String) statussort.getSelectedItem();\r\n//            String kw = searchtf.getText();\r\n            selectSort = (String) statussort.getSelectedItem();\r\n            model.setRowCount(0);\r\n//            String searchh = String.format(\"SELECT * FROM product WHERE (NameR = '%s' OR ID = '%s') AND Status = '%s'\", kw, kw, selectSort);\r\n//            setTable(searchh);\r\n            if(selectSort.equals(\"-\") & searchtf.getText().equals(\"\")) {\r\n                String sortt = \"SELECT * FROM product;\";\r\n                setTable(sortt);\r\n            }\r\n            else {\r\n                String sortt = String.format(\"SELECT * FROM product WHERE Status = '%s'\", selectSort);\r\n                setTable(sortt);\r\n            }\r\n//            if (statussort.getSelectedIndex() == 0 & searchtf.getText().equals(\"\")) {\r\n//                String sss = \"SELECT * FROM product\";\r\n//                setTable(sss);\r\n//            }\r\n//            else if (statussort.getSelectedIndex() == 0 & searchtf.getText().equals(\"\") != true) {\r\n//                String sss = \"SELECT * FROM product WHERE NameR = '%s' OR ID = '%s'\";\r\n//                setTable(sss);\r\n//        }   \r\n    }\r\n    }\r\n    \r\n    public static void main(String[] args) {\r\n            try {\r\n                UIManager.setLookAndFeel(new FlatMaterialLighterIJTheme());\r\n            }  catch(Exception ex ) {\r\n                System.err.println( \"Failed to initialize LaF\" );\r\n    } \r\n            new DeliveryMan();\r\n    }\r\n            \r\n           \r\n //////////////////// FOR JUST DELETE BUTTON ON 5TH COLUMN ////////////////\r\n    class ButtonRenderer extends JButton implements TableCellRenderer {\r\n        public ButtonRenderer() {\r\n            setOpaque(true);\r\n        }\r\n\r\n        @Override\r\n        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {\r\n            setText((value == null) ? \"\" : value.toString());\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Custom TableCellEditor for button\r\n    class ButtonEditor extends AbstractCellEditor implements TableCellEditor {\r\n        private JButton button;\r\n\r\n        public ButtonEditor() {\r\n            button = new JButton(\"Change\");\r\n            button.addActionListener(e -> {\r\n//                fireEditingStopped();\r\n                int selectedRow = table.getSelectedRow();\r\n                String currentstats = model.getValueAt(selectedRow, 4).toString();\r\n                if (currentstats.equals(\"Receive\")) {\r\n                    sc.getReceives().setEnabled(false);\r\n                    sc.getSortings().setEnabled(true);\r\n                    sc.getInTransits().setEnabled(false);\r\n                    sc.getCompletes().setEnabled(false);\r\n                    sc.getDeliverys().setEnabled(false);\r\n                } \r\n                else if (currentstats.equals(\"Sorting\")) {\r\n                    sc.getReceives().setEnabled(false);\r\n                    sc.getSortings().setEnabled(false);\r\n                    sc.getInTransits().setEnabled(true);\r\n                    sc.getDeliverys().setEnabled(false);\r\n                    sc.getCompletes().setEnabled(false);\r\n                }\r\n                else if (currentstats.equals(\"In Transit\")) {\r\n                    sc.getReceives().setEnabled(false);\r\n                    sc.getSortings().setEnabled(false);\r\n                    sc.getInTransits().setEnabled(false);\r\n                    sc.getDeliverys().setEnabled(true);\r\n                    sc.getCompletes().setEnabled(false);\r\n                }\r\n                else if (currentstats.equals(\"Delivery\")) {\r\n                    sc.getReceives().setEnabled(false);\r\n                    sc.getSortings().setEnabled(false);\r\n                    sc.getInTransits().setEnabled(false);\r\n                    sc.getDeliverys().setEnabled(false);\r\n                    sc.getCompletes().setEnabled(true);\r\n                }\r\n                else if (currentstats.equals(\"Complete\")) {\r\n                    sc.getReceives().setEnabled(false);\r\n                    sc.getSortings().setEnabled(false);\r\n                    sc.getInTransits().setEnabled(false);\r\n                    sc.getDeliverys().setEnabled(false);\r\n                    sc.getCompletes().setEnabled(false);\r\n                }\r\n                sc.getFr().setVisible(true);\r\n            });\r\n        }\r\n\r\n        @Override\r\n        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {\r\n            return button;\r\n        }\r\n\r\n        @Override\r\n        public Object getCellEditorValue() {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/net/handytrack/statusupdater/DeliveryMan.java b/src/net/handytrack/statusupdater/DeliveryMan.java
--- a/src/net/handytrack/statusupdater/DeliveryMan.java	(revision 42ab48ba708b1b90b7d70fb7dbae4f5ed4067e73)
+++ b/src/net/handytrack/statusupdater/DeliveryMan.java	(date 1711829447061)
@@ -228,23 +228,23 @@
                 time = dtf.format(LocalDateTime.now());
                 
                 if (sc.getStatus().equals("Receive")){
-                    String statustime = String.format("UPDATE trackinfo SET Recieved = '%s' WHERE TrackNum = '%s')", time, data1);
+                    String statustime = String.format("UPDATE trackinfo SET Recieved = '%s' WHERE TrackNum = '%s'", time, data1);
                     DBmanipulation.getInstance().getUpdate(statustime);
                 }
                 else if (sc.getStatus().equals("Sorting")){
-                    String statustime = String.format("UPDATE trackinfo SET Sorting = '%s' WHERE TrackNum = '%s')", time, data1);
+                    String statustime = String.format("UPDATE trackinfo SET Sorting = '%s' WHERE TrackNum = '%s'", time, data1);
                     DBmanipulation.getInstance().getUpdate(statustime);
                 }
                 else if (sc.getStatus().equals("In Transit")){
-                    String statustime = String.format("UPDATE trackinfo SET Transit = '%s' WHERE TrackNum = '%s')", time, data1);
+                    String statustime = String.format("UPDATE trackinfo SET Transit = '%s' WHERE TrackNum = '%s'", time, data1);
                     DBmanipulation.getInstance().getUpdate(statustime);
                 }
                 else if (sc.getStatus().equals("Delivery")){
-                    String statustime = String.format("UPDATE trackinfo SET Delivery = '%s' WHERE TrackNum = '%s')", time, data1);
+                    String statustime = String.format("UPDATE trackinfo SET Delivery = '%s' WHERE TrackNum = '%s'", time, data1);
                     DBmanipulation.getInstance().getUpdate(statustime);
                 }
                 else if (sc.getStatus().equals("Complete")){
-                    String statustime = String.format("UPDATE trackinfo SET Finish = '%s' WHERE TrackNum = '%s')", time, data1);
+                    String statustime = String.format("UPDATE trackinfo SET Finish = '%s' WHERE TrackNum = '%s'", time, data1);
                     DBmanipulation.getInstance().getUpdate(statustime);
                 }
                 
