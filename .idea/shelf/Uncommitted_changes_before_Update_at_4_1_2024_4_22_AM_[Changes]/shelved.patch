Index: src/net/handytrack/HANDYTRACKMAIN/LoginGUI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package net.handytrack.HANDYTRACKMAIN;\r\n\r\nimport com.formdev.flatlaf.intellijthemes.materialthemeuilite.FlatMaterialLighterIJTheme;\r\nimport net.handytrack.HANDYTRACKMAIN.RegisterForm;\r\nimport net.handytrack.database.DBquery;\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.border.Border;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\nimport java.sql.ResultSet;\r\n\r\npublic class LoginGUI {\r\n\r\n    //private DBConnect db;\r\n    private int userId;\r\n    private String name;\r\n    private String num;\r\n    private JFrame fr;\r\n    private JTextField usernameField;\r\n    private JPasswordField passwordField;\r\n    private JButton signinButton, signupButton, forgotPasswordButton;\r\n    private JLabel welcomeLabel, prolabel, locklabel, logolabel;\r\n    private JPanel pwel, ppro, ppas, plogo, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30;\r\n    private ImageIcon pro, scalepro, lock, scalelock, logo, scalelogo;\r\n    private HANDYTRACKMAIN hdm;\r\n\r\n    @SuppressWarnings(\"empty-statement\")\r\n    public LoginGUI() {\r\n        hdm = new HANDYTRACKMAIN();\r\n        fr = new JFrame(\"Handy Track's LOGIN\");\r\n        this.userId = userId;\r\n        prolabel = new JLabel();\r\n        locklabel = new JLabel();\r\n        logolabel = new JLabel();\r\n        welcomeLabel = new JLabel(\"Welcome to HANDY TRACK\", (int) Component.CENTER_ALIGNMENT);\r\n        welcomeLabel.setFont(new Font(\"Arial\", Font.BOLD, 24));\r\n        welcomeLabel.setOpaque(true);\r\n        welcomeLabel.setBackground(new Color(210, 224, 251));\r\n        //welcomeLabel.setBackground(new Color(210, 224, 251)); // Set bg color\r\n        welcomeLabel.setForeground(new Color(9, 55, 125)); // Set text color\r\n        usernameField = new JTextField(\"Username\");\r\n        usernameField.setColumns(15); // Set the desired length\r\n        usernameField.setOpaque(false);\r\n        usernameField.setForeground(Color.BLACK); // Set text color\r\n        usernameField.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLACK)); // Bottom border only\r\n        usernameField.addFocusListener(new FocusAdapter() {\r\n            @Override\r\n            public void focusGained(FocusEvent e) {\r\n                if (usernameField.getText().equals(\"Username\")) {\r\n                    usernameField.setCaretPosition(0);\r\n                }\r\n            }\r\n\r\n            public void focusLost() {\r\n            }\r\n\r\n            @Override\r\n            public void focusLost(FocusEvent e) {\r\n                if (usernameField.getText().isEmpty()) {\r\n                    usernameField.setText(\"Username\");\r\n                }\r\n            }\r\n        });\r\n        usernameField.addKeyListener(new KeyAdapter() {\r\n            @Override\r\n            public void keyPressed(KeyEvent e) {\r\n                if (usernameField.getText().equals(\"Username\")) {\r\n                    usernameField.setText(\"\");\r\n                }\r\n            }\r\n\r\n            public void keyReleased() {\r\n            }\r\n\r\n            public void keyPressed() {\r\n            }\r\n        });\r\n\r\n        passwordField = new JPasswordField();\r\n        passwordField.setColumns(15); // Set the desired length\r\n        passwordField.setOpaque(false);\r\n        passwordField.setForeground(Color.BLACK); // Set text color\r\n        passwordField.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLACK)); // Bottom border only\r\n        passwordField.setEchoChar((char) 0);\r\n        passwordField.setText(\"Password\");\r\n        passwordField.setEchoChar((char) 0);\r\n        passwordField.addFocusListener(new FocusAdapter() {\r\n            @Override\r\n            public void focusGained(FocusEvent e) {\r\n                if (String.valueOf(passwordField.getPassword()).equals(\"Password\")) {\r\n                    passwordField.setCaretPosition(0);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void focusLost(FocusEvent e) {\r\n                if (String.valueOf(passwordField.getPassword()).isEmpty()) {\r\n                    passwordField.setEchoChar((char) 0);\r\n                    passwordField.setText(\"Password\");\r\n                }\r\n            }\r\n        });\r\n\r\n        passwordField.addKeyListener(new KeyAdapter() {\r\n            @Override\r\n            public void keyPressed(KeyEvent e) {\r\n                if (String.valueOf(passwordField.getPassword()).equals(\"Password\")) {\r\n                    passwordField.setText(\"\");\r\n                    passwordField.setEchoChar('\\u25cf');\r\n                }\r\n            }\r\n        });\r\n\r\n        forgotPasswordButton = new JButton(\"forgot Password?\");\r\n        forgotPasswordButton.setContentAreaFilled(false);\r\n        forgotPasswordButton.setFont(new Font(\"Arial\", Font.BOLD, 10));\r\n        forgotPasswordButton.setForeground(Color.BLACK); // Set text color\r\n        forgotPasswordButton.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLACK)); // Set black border on the bottom\r\n        //forgotPasswordButton.setBorderPainted(false); \r\n        forgotPasswordButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                String input = JOptionPane.showInputDialog(fr, \"Contact the relevant person to request a key \\n\\n Enter organization's key\", \"Forgot Password\", JOptionPane.QUESTION_MESSAGE);\r\n                if (\"organization_key\".equals(input)) {\r\n                    JOptionPane.showMessageDialog(fr, \"Your password is: *******\");\r\n                } else {\r\n                    JOptionPane.showMessageDialog(fr, \"Wrong Password!!!\", \"Invalid organization's key\", JOptionPane.WARNING_MESSAGE);\r\n                }\r\n            }\r\n        });\r\n        forgotPasswordButton.addFocusListener(new FocusAdapter() {\r\n            @Override\r\n            public void focusGained(FocusEvent e) {\r\n                forgotPasswordButton.setForeground(Color.RED); // Set text color \r\n            }\r\n\r\n            @Override\r\n            public void focusLost(FocusEvent e) {\r\n                forgotPasswordButton.setForeground(Color.BLACK); // Set text color\r\n            }\r\n        });\r\n\r\n        signinButton = new JButton(\"Sign-in\");\r\n        signinButton.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n        signinButton.setForeground(Color.BLUE);\r\n        signinButton.setBackground(new Color(247, 195, 21));\r\n        signinButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if (e.getSource() == signinButton) {\r\n                    if (loginuser()) {\r\n                        JOptionPane.showMessageDialog(null, \"Login successful!\");\r\n                        hdm.getFrame().setVisible(true);\r\n                        fr.dispose();\r\n                    } else {\r\n                        JOptionPane.showMessageDialog(null, \"Invalid username or password\");\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        signupButton = new JButton(\"Sign-up\");\r\n        signupButton.setBackground(new Color(210, 224, 251));\r\n        signupButton.setFont(new Font(\"Arial\", Font.BOLD, 10));\r\n        signupButton.setForeground(Color.BLACK); // Set text color\r\n        signupButton.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLACK)); // Set black border on the bottom\r\n        signupButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                String input = JOptionPane.showInputDialog(fr, \"Contact the relevant person to request a key \\n\\n Enter organization's key\", \"Before Register\", JOptionPane.QUESTION_MESSAGE);\r\n\r\n                if (\"organization_key\".equals(input)) {\r\n                    RegisterForm registerGUI = new RegisterForm();\r\n                } else {\r\n                    JOptionPane.showMessageDialog(fr, \"Wrong Password!!!\", \"Invalid organization's key\", JOptionPane.WARNING_MESSAGE);\r\n                }\r\n            }\r\n        });\r\n        pwel = new JPanel();\r\n        ppro = new JPanel();\r\n        ppas = new JPanel();\r\n        plogo = new JPanel();\r\n        p1 = new JPanel();\r\n        p2 = new JPanel();\r\n        p3 = new JPanel();\r\n        p4 = new JPanel();\r\n        p5 = new JPanel();\r\n        p6 = new JPanel();\r\n        p7 = new JPanel();\r\n        p8 = new JPanel();\r\n        p9 = new JPanel();\r\n        p10 = new JPanel();\r\n        p11 = new JPanel();\r\n        p12 = new JPanel();\r\n        p13 = new JPanel();\r\n        p14 = new JPanel();\r\n        p15 = new JPanel();\r\n        p16 = new JPanel();\r\n        p17 = new JPanel();\r\n        p18 = new JPanel();\r\n        p19 = new JPanel();\r\n        p20 = new JPanel();\r\n        p21 = new JPanel();\r\n        p22 = new JPanel();\r\n        p23 = new JPanel();\r\n        p24 = new JPanel();\r\n        p25 = new JPanel();\r\n        p26 = new JPanel();\r\n        p27 = new JPanel();\r\n        p28 = new JPanel();\r\n        p29 = new JPanel();\r\n        p30 = new JPanel();\r\n\r\n        // Set preferred sizes for JLabels\r\n        prolabel.setPreferredSize(new Dimension(25, 25));\r\n        locklabel.setPreferredSize(new Dimension(25, 25));\r\n        logolabel.setPreferredSize(new Dimension(50, 50));\r\n\r\n        // Load image icons\r\n        pro = new ImageIcon(\"resources/Picture/user.png\");\r\n        lock = new ImageIcon(\"resources/Picture/lock.png\");\r\n        logo = new ImageIcon(\"resources/Picture/LOGO.png\");\r\n\r\n        // Scale image icons\r\n        scalepro = ImageUtils.getScaledImageIcon(pro, prolabel.getPreferredSize().width, prolabel.getPreferredSize().height);\r\n        scalelock = ImageUtils.getScaledImageIcon(lock, locklabel.getPreferredSize().width, locklabel.getPreferredSize().height);\r\n        // Set icons to JLabels\r\n        prolabel.setIcon(scalepro);\r\n        locklabel.setIcon(scalelock);\r\n        logolabel.setIcon(logo);\r\n\r\n        //////////STYLE GUI///////////////////////////////////////\r\n        Border shadowBorder = BorderFactory.createCompoundBorder(\r\n                BorderFactory.createLineBorder(Color.BLACK, 2), // shadow\r\n                BorderFactory.createEmptyBorder(10, 10, 10, 10)\r\n        );\r\n        p3.setBorder(shadowBorder);\r\n        p3.setBackground(Color.WHITE);\r\n        ppro.setBorder(BorderFactory.createMatteBorder(1, 1, 0, 1, Color.BLACK));\r\n        ppas.setBorder(BorderFactory.createMatteBorder(0, 1, 1, 1, Color.BLACK));\r\n        //p4.setBorder(BorderFactory.createMatteBorder(10, 0, 0, 0, Color.BLACK));\r\n        pwel.setOpaque(true);\r\n        pwel.setBackground(new Color(210, 224, 251));\r\n        plogo.setOpaque(true);\r\n        plogo.setBackground(new Color(210, 224, 251));\r\n        p1.setOpaque(true);\r\n        p1.setBackground(new Color(210, 224, 251));\r\n        p2.setOpaque(true);\r\n        p2.setBackground(new Color(210, 224, 251));\r\n        p5.setOpaque(true);\r\n        p5.setBackground(new Color(210, 224, 251));\r\n        p6.setOpaque(true);\r\n        p6.setBackground(new Color(210, 224, 251));\r\n        p7.setOpaque(true);\r\n        p7.setBackground(new Color(210, 224, 251));\r\n        p8.setOpaque(true);\r\n        p8.setBackground(new Color(210, 224, 251));\r\n        p9.setOpaque(true);\r\n        p9.setBackground(new Color(210, 224, 251));\r\n        p10.setOpaque(true);\r\n        p10.setBackground(new Color(210, 224, 251));\r\n        p11.setOpaque(true);\r\n        p11.setBackground(new Color(210, 224, 251));\r\n\r\n        pwel.setPreferredSize(new Dimension(350,100));\r\n        p1.setPreferredSize(new Dimension(50,200));\r\n        p2.setPreferredSize(new Dimension(50,200));\r\n        p3.setPreferredSize(new Dimension(250,100));\r\n        p4.setPreferredSize(new Dimension(350,100));\r\n        p5.setPreferredSize(new Dimension(350, 25));\r\n        //p6.setPreferredSize(new Dimension(175, 50));\r\n        //p7.setPreferredSize(new Dimension(175, 50));\r\n        p8.setPreferredSize(new Dimension(120, 75));\r\n        p9.setPreferredSize(new Dimension(115, 75));\r\n        p10.setPreferredSize(new Dimension(115, 75));\r\n        // p11.setPreferredSize(new Dimension(350,50));\r\n        p7.add(forgotPasswordButton);\r\n        p11.add(signupButton);\r\n        plogo.add(logolabel);\r\n\r\n        ppro.add(prolabel);ppro.add(usernameField);\r\n        ppas.add(locklabel);ppas.add(passwordField);\r\n        p5.setLayout(new GridLayout(1,2));\r\n        p5.add(p6);p5.add(p7);\r\n        p8.setLayout(new GridLayout(2,1));\r\n        p8.add(signinButton);p8.add(p11);\r\n\r\n        pwel.setLayout(new GridLayout(2,1));\r\n        pwel.add(welcomeLabel);\r\n        pwel.add(plogo);\r\n\r\n        p3.setLayout(new GridLayout(2,1));\r\n        p3.add(ppro);\r\n        p3.add(ppas);\r\n        p4.setLayout(new BorderLayout());\r\n        p4.add(p5,BorderLayout.NORTH);p4.add(p8,BorderLayout.CENTER);p4.add(p9,BorderLayout.WEST);p4.add(p10,BorderLayout.EAST);\r\n\r\n        fr.setLayout(new BorderLayout());\r\n        fr.add(pwel,BorderLayout.NORTH);\r\n        fr.add(p1,BorderLayout.WEST);\r\n        fr.add(p2,BorderLayout.EAST);\r\n        fr.add(p3,BorderLayout.CENTER);\r\n        fr.add(p4,BorderLayout.SOUTH);\r\n\r\n        /////////////////////////////////////////////////////////////////\r\n        fr.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        fr.setSize(350, 400);\r\n        fr.setLocation(600, 200);\r\n        fr.setResizable(false);\r\n        fr.setVisible(true);\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(new FlatMaterialLighterIJTheme());\r\n        } catch (UnsupportedLookAndFeelException e) {\r\n            e.printStackTrace();\r\n        }\r\n        new LoginGUI();\r\n\r\n    }\r\n\r\n    public Boolean loginuser() {\r\n        String name = usernameField.getText();\r\n        String pass = new String(passwordField.getPassword());\r\n\r\n        String sql = String.format(\"SELECT * FROM login WHERE username = '%s' and password = '%s'\", name, pass);\r\n        ResultSet rs = DBquery.getInstance().getSelect(sql);\r\n        try {\r\n            if (rs.next()) {\r\n                userId = rs.getInt(\"iduser\"); // Store the userId if login is successful\r\n                String sql1 = String.format(\"SELECT * FROM login WHERE iduser = '%d'\", userId);\r\n                ResultSet rs1 = DBquery.getInstance().getSelect(sql1);\r\n                if (rs1.getString(\"password\").equals(pass)) {\r\n                    hdm.setKeyuser(this.userId);\r\n                    hdm.fetchUser();\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    public int getuserId() {\r\n        return userId;\r\n    }\r\n\r\n    }\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/net/handytrack/HANDYTRACKMAIN/LoginGUI.java b/src/net/handytrack/HANDYTRACKMAIN/LoginGUI.java
--- a/src/net/handytrack/HANDYTRACKMAIN/LoginGUI.java	(revision e602c0aa2885a5f138193952685a20d15d09304c)
+++ b/src/net/handytrack/HANDYTRACKMAIN/LoginGUI.java	(date 1711918296255)
@@ -22,7 +22,7 @@
     private JButton signinButton, signupButton, forgotPasswordButton;
     private JLabel welcomeLabel, prolabel, locklabel, logolabel;
     private JPanel pwel, ppro, ppas, plogo, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30;
-    private ImageIcon pro, scalepro, lock, scalelock, logo, scalelogo;
+    private ImageIcon pro, scalepro, lock, scalelock, logo;
     private HANDYTRACKMAIN hdm;
 
     @SuppressWarnings("empty-statement")
@@ -123,7 +123,7 @@
             public void actionPerformed(ActionEvent e) {
                 String input = JOptionPane.showInputDialog(fr, "Contact the relevant person to request a key \n\n Enter organization's key", "Forgot Password", JOptionPane.QUESTION_MESSAGE);
                 if ("organization_key".equals(input)) {
-                    JOptionPane.showMessageDialog(fr, "Your password is: *******");
+                    String username = JOptionPane.showInputDialog(fr, "Enter your username:", "Forgot Password", JOptionPane.QUESTION_MESSAGE);
                 } else {
                     JOptionPane.showMessageDialog(fr, "Wrong Password!!!", "Invalid organization's key", JOptionPane.WARNING_MESSAGE);
                 }
Index: src/net/handytrack/HANDYTRACKMAIN/RegisterForm.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\npackage net.handytrack.HANDYTRACKMAIN;\r\nimport net.handytrack.database.DBmanipulation;\r\nimport net.handytrack.database.DBquery;\r\n\r\nimport java.sql.*;\r\nimport java.awt.*;\r\nimport javax.swing.*;\r\nimport java.awt.event.*;\r\nimport javax.swing.plaf.nimbus.NimbusLookAndFeel;\r\n\r\npublic class RegisterForm {\r\n    private JFrame fr;\r\n    private JTextField firstNameField, lastNameField, phoneNumberField, emailField, usernameField;\r\n    private JPasswordField passwordField, passwordagainField;\r\n    private JButton registerButton, backToLogin;\r\n    private JPanel registerPanel, btnPanel, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12;\r\n\r\n\r\n    public RegisterForm(){\r\n       // Initialize components\r\n        fr = new JFrame(\"Register Form\");\r\n        firstNameField = new JTextField(\"First Name\");\r\n        lastNameField = new JTextField(\"Last Name\");\r\n        phoneNumberField = new JTextField(\"Phone Number\");\r\n        emailField = new JTextField(\"Email\");\r\n        usernameField = new JTextField(\"Username\");\r\n        passwordField = new JPasswordField(\"Password\");\r\n        passwordagainField = new JPasswordField(\"Enter Password Again\");\r\n        registerButton = new JButton(\"Register\");\r\n        backToLogin = new JButton(\"Back to Login\");\r\n        registerPanel = new JPanel();\r\n        p1 = new JPanel();\r\n        p2 = new JPanel();\r\n        p3 = new JPanel();\r\n        p4 = new JPanel();\r\n        p5 = new JPanel();\r\n        p6 = new JPanel();\r\n        p7 = new JPanel();\r\n        p8 = new JPanel();\r\n        p9 = new JPanel();\r\n        p10 = new JPanel();\r\n        p11 = new JPanel();\r\n        p12 = new JPanel();\r\n\r\n        p2.setPreferredSize(new Dimension(400, 40));\r\n        p3.setPreferredSize(new Dimension(50, 520));\r\n        p4.setPreferredSize(new Dimension(50, 520));\r\n        p5.setPreferredSize(new Dimension(400, 40));\r\n        registerPanel.setPreferredSize(new Dimension(300, 520));\r\n\r\n        // Set text field properties and listeners\r\n        setConFirstNameField(firstNameField);\r\n        setConLastNameField(lastNameField);\r\n        setConPhoneNumberField(phoneNumberField);\r\n        setConEmailField(emailField);\r\n        setConUsernameField(usernameField);\r\n        setConPasswordField(passwordField);\r\n        setConPasswordAgainField(passwordagainField);\r\n\r\n        // Style GUI\r\n        styleTextField(firstNameField);\r\n        styleTextField(lastNameField);\r\n        styleTextField(phoneNumberField);\r\n        styleTextField(emailField);\r\n        styleTextField(usernameField);\r\n        styleTextField(passwordField);\r\n        styleTextField(passwordagainField);\r\n        stylePanel(p1);\r\n        stylePanel(p2);\r\n        stylePanel(p3);\r\n        stylePanel(p4);\r\n        stylePanel(p5);\r\n        stylePanel(registerPanel);\r\n        stylePanelRegisPanel(p6);\r\n        stylePanelRegisPanel(p7);\r\n        stylePanelRegisPanel(p8);\r\n        stylePanelRegisPanel(p9);\r\n        stylePanelRegisPanel(p10);\r\n        stylePanelRegisPanel(p11);\r\n        stylePanelRegisPanel(p12);\r\n        styleButton(backToLogin);\r\n        backToLogin.setBackground(new Color(210, 224, 251));\r\n        styleButton(registerButton);\r\n\r\n        registerPanel.setSize(400, 300);\r\n        registerPanel.setLayout(new GridLayout(13, 1));\r\n        registerPanel.add(firstNameField);\r\n        registerPanel.add(p6);\r\n        registerPanel.add(lastNameField);\r\n        registerPanel.add(p7);\r\n        registerPanel.add(phoneNumberField);\r\n        registerPanel.add(p8);\r\n        registerPanel.add(emailField);\r\n        registerPanel.add(p9);\r\n        registerPanel.add(usernameField);\r\n        registerPanel.add(p11);\r\n        registerPanel.add(passwordField);\r\n        registerPanel.add(p12);\r\n        registerPanel.add(passwordagainField);\r\n\r\n        p5.add(backToLogin);p5.add(registerButton);\r\n        p1.setLayout(new BorderLayout());\r\n            p1.add(p2,BorderLayout.NORTH);\r\n        p1.add(p3,BorderLayout.WEST);p1.add(registerPanel,BorderLayout.CENTER);p1.add(p4,BorderLayout.EAST);\r\n            p1.add(p5,BorderLayout.SOUTH);\r\n\r\n        fr.add(p1);\r\n        fr.setLocation(900, 200);\r\n        fr.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        fr.setSize(400, 600);\r\n        fr.setResizable(false);\r\n        fr.setVisible(true);\r\n        //back to login action listener\r\n        backToLogin.addActionListener(new ActionListener(){\r\n            @Override\r\n            public void actionPerformed(ActionEvent e){\r\n                if (e.getSource()==backToLogin){\r\n                    new LoginGUI();\r\n                    fr.dispose();\r\n                }\r\n            }\r\n        });\r\n        // Register button action listener\r\n        registerButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) { // Check conditions and perform registration\r\n                if (isValidRegistration()) {\r\n                    String firstName = firstNameField.getText();\r\n                    String lastName = lastNameField.getText();\r\n                    String phoneNumber = phoneNumberField.getText();\r\n                    String email = emailField.getText();\r\n                    String username = usernameField.getText();\r\n                    String password = String.valueOf(passwordField.getPassword());\r\n                    try {\r\n                        String sql = String.format(\"INSERT INTO login(name, surename, tel, email, username, password) VALUES ('%s', '%s', '%s', '%s', '%s', '%s')\",firstName,lastName,phoneNumber,email,username,password);\r\n                        DBmanipulation.getInstance().getUpdate(sql);\r\n                    } catch (Exception ex) {\r\n                        ex.printStackTrace();\r\n                    }\r\n                    // Perform registration process\r\n                    JOptionPane.showMessageDialog(fr, \"Registration successful!\", \"Success\", JOptionPane.INFORMATION_MESSAGE);\r\n                } else {\r\n                    // Display error message if registration conditions are not met\r\n                    JOptionPane.showMessageDialog(fr, \"Failed to register.\", \"Error\", JOptionPane.ERROR_MESSAGE);\r\n                    //check error\r\n                    checkEmptyAndInvalidFields();\r\n                }\r\n            }\r\n\r\n        });\r\n    }\r\n    private void setConFirstNameField(JTextField tf) {\r\n        tf.addFocusListener(new FocusAdapter() {\r\n            @Override\r\n            public void focusGained(FocusEvent e) {\r\n                if(tf.getText().equals(\"First Name\") || tf.getText().equals(\"***Please fill the First Name***\")){\r\n                    tf.setCaretPosition(0);\r\n                }\r\n            }\r\n            public void focusLost(){}\r\n\r\n            @Override\r\n            public void focusLost(FocusEvent e) {\r\n                if (tf.getText().isEmpty() || tf.getText().equals(\"***Please fill the First Name***\")) {\r\n                    tf.setText(\"First Name\");\r\n                    tf.setForeground(Color.BLACK);\r\n                }\r\n            }\r\n        });\r\n        tf.addKeyListener(new KeyAdapter() {\r\n            @Override\r\n            public void keyPressed(KeyEvent e) {\r\n                if(tf.getText().equals(\"First Name\") || tf.getText().equals(\"***Please fill the First Name***\")){\r\n                    tf.setText(\"\");\r\n                    tf.setForeground(Color.BLACK);\r\n                }\r\n            }\r\n            public void keyReleased(){}\r\n            public void keyPressed(){}\r\n        });\r\n\r\n        tf.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                lastNameField.requestFocusInWindow();\r\n            }\r\n        });\r\n    }\r\n    private void setConLastNameField(JTextField tf) {\r\n        tf.addFocusListener(new FocusAdapter() {\r\n            @Override\r\n            public void focusGained(FocusEvent e) {\r\n                if(tf.getText().equals(\"Last Name\") || tf.getText().equals(\"***Please fill the Last Name***\")){\r\n                    tf.setCaretPosition(0);\r\n                }\r\n            }\r\n            public void focusLost(){}\r\n\r\n            @Override\r\n            public void focusLost(FocusEvent e) {\r\n                if (tf.getText().isEmpty() || tf.getText().equals(\"***Please fill the Last Name***\")) {\r\n                    tf.setText(\"Last Name\");\r\n                    tf.setForeground(Color.BLACK);\r\n                }\r\n            }\r\n        });\r\n        tf.addKeyListener(new KeyAdapter() {\r\n            @Override\r\n            public void keyPressed(KeyEvent e) {\r\n                if(tf.getText().equals(\"Last Name\") || tf.getText().equals(\"***Please fill the Last Name***\")){\r\n                    tf.setText(\"\");\r\n                    tf.setForeground(Color.BLACK);\r\n                }\r\n            }\r\n            public void keyReleased(){}\r\n            public void keyPressed(){}\r\n        });\r\n        tf.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                phoneNumberField.requestFocusInWindow();\r\n            }\r\n        });\r\n    }\r\n    private void setConPhoneNumberField(JTextField tf) {\r\n        tf.addFocusListener(new FocusAdapter() {\r\n            @Override\r\n            public void focusGained(FocusEvent e) {\r\n                if(tf.getText().equals(\"Phone Number\") || tf.getText().equals(\"***Please fill the Phone Number***\") || tf.getText().equals(\"***Invalid Phone Number***\")){\r\n                    tf.setCaretPosition(0);\r\n                }\r\n            }\r\n            public void focusLost(){}\r\n\r\n            @Override\r\n            public void focusLost(FocusEvent e) {\r\n                if (tf.getText().isEmpty() || tf.getText().equals(\"***Please fill the Phone Number***\") || tf.getText().equals(\"***Invalid Phone Number***\")) {\r\n                    tf.setText(\"Phone Number\");\r\n                    tf.setForeground(Color.BLACK);\r\n                }\r\n            }\r\n        });\r\n        tf.addKeyListener(new KeyAdapter() {\r\n            @Override\r\n            public void keyPressed(KeyEvent e) {\r\n                if(tf.getText().equals(\"Phone Number\") || tf.getText().equals(\"***Please fill the Phone Number***\") || tf.getText().equals(\"***Invalid Phone Number***\")){\r\n                    tf.setText(\"\");\r\n                    tf.setForeground(Color.BLACK);\r\n                }\r\n            }\r\n            public void keyReleased(){}\r\n            public void keyPressed(){}\r\n        });\r\n        tf.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                emailField.requestFocusInWindow();\r\n            }\r\n        });\r\n    }\r\n    private void setConEmailField(JTextField tf) {\r\n        tf.addFocusListener(new FocusAdapter() {\r\n            @Override\r\n            public void focusGained(FocusEvent e) {\r\n                if(tf.getText().equals(\"Email\") || tf.getText().equals(\"***Please fill the Email***\") || tf.getText().equals(\"***Invalid Email***\")){\r\n                    tf.setCaretPosition(0);\r\n                }\r\n            }\r\n            public void focusLost(){}\r\n\r\n            @Override\r\n            public void focusLost(FocusEvent e) {\r\n                if (tf.getText().isEmpty() || tf.getText().equals(\"***Please fill the Email***\") || tf.getText().equals(\"***Invalid Email***\")) {\r\n                    tf.setText(\"Email\");\r\n                    tf.setForeground(Color.BLACK);\r\n                }\r\n            }\r\n        });\r\n        tf.addKeyListener(new KeyAdapter() {\r\n            @Override\r\n            public void keyPressed(KeyEvent e) {\r\n                if(tf.getText().equals(\"Email\") || tf.getText().equals(\"***Please fill the Email***\") || tf.getText().equals(\"***Invalid Email***\")){\r\n                    tf.setText(\"\");\r\n                    tf.setForeground(Color.BLACK);\r\n                }\r\n            }\r\n            public void keyReleased(){}\r\n            public void keyPressed(){}\r\n        });\r\n        tf.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                usernameField.requestFocusInWindow();\r\n            }\r\n        });\r\n    }\r\n    private void setConUsernameField(JTextField tf) {\r\n        tf.addFocusListener(new FocusAdapter() {\r\n            @Override\r\n            public void focusGained(FocusEvent e) {\r\n                if(tf.getText().equals(\"Username\") || tf.getText().equals(\"***Please fill the Username***\")){\r\n                    tf.setCaretPosition(0);\r\n                }\r\n            }\r\n            public void focusLost(){}\r\n\r\n            @Override\r\n            public void focusLost(FocusEvent e) {\r\n                if (tf.getText().isEmpty() || tf.getText().equals(\"***Please fill the Username***\")) {\r\n                    tf.setText(\"Username\");\r\n                    tf.setForeground(Color.BLACK);\r\n                }\r\n            }\r\n        });\r\n        tf.addKeyListener(new KeyAdapter() {\r\n            @Override\r\n            public void keyPressed(KeyEvent e) {\r\n                if(tf.getText().equals(\"Username\") || tf.getText().equals(\"***Please fill the Username***\")){\r\n                    tf.setText(\"\");\r\n                    tf.setForeground(Color.BLACK);\r\n                }\r\n            }\r\n            public void keyReleased(){}\r\n            public void keyPressed(){}\r\n        });\r\n        tf.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                passwordField.requestFocusInWindow();\r\n            }\r\n        });\r\n    }\r\n    private void setConPasswordField(JTextField tf) {\r\n        passwordField.setEchoChar((char) 0);\r\n        tf.setText(\"Password\");\r\n        tf.addFocusListener(new FocusAdapter() {\r\n            @Override\r\n            public void focusGained(FocusEvent e) {\r\n                if (String.valueOf(passwordField.getPassword()).equals(\"Password\") || String.valueOf(passwordField.getPassword()).equals(\"***Please fill the Password***\") || String.valueOf(passwordField.getPassword()).equals(\"***Invalid Password***\")) {\r\n                    passwordField.setCaretPosition(0);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void focusLost(FocusEvent e) {\r\n                if (String.valueOf(passwordField.getPassword()).isEmpty() || String.valueOf(passwordField.getPassword()).equals(\"***Please fill the Password***\") || String.valueOf(passwordField.getPassword()).equals(\"***Invalid Password***\")) {\r\n                    passwordField.setEchoChar((char) 0);\r\n                    passwordField.setText(\"Password\");\r\n                    passwordField.setForeground(Color.BLACK);\r\n                }\r\n            }\r\n        });\r\n\r\n        tf.addKeyListener(new KeyAdapter() {\r\n            @Override\r\n            public void keyPressed(KeyEvent e) {\r\n                if (String.valueOf(passwordField.getPassword()).equals(\"Password\") || String.valueOf(passwordField.getPassword()).equals(\"***Please fill the Password***\") || String.valueOf(passwordField.getPassword()).equals(\"***Invalid Password***\")) {\r\n                    passwordField.setText(\"\");\r\n                    passwordField.setEchoChar('\\u25cf');\r\n                    passwordField.setForeground(Color.BLACK);\r\n                }\r\n            }\r\n        });\r\n        tf.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                passwordagainField.requestFocusInWindow();\r\n            }\r\n        });\r\n    }\r\n    private void setConPasswordAgainField(JTextField tf) {\r\n        passwordagainField.setEchoChar((char) 0);passwordagainField.setText(\"Enter Password Again\");\r\n        passwordagainField.setEchoChar((char) 0);\r\n        tf.addFocusListener(new FocusAdapter() {\r\n            @Override\r\n            public void focusGained(FocusEvent e) {\r\n                if (String.valueOf(passwordagainField.getPassword()).equals(\"Enter Password Again\") || String.valueOf(passwordagainField.getPassword()).equals(\"***Please fill the Password Again***\") || String.valueOf(passwordagainField.getPassword()).equals(\"***Passwords doesn't match***\")) {\r\n                    passwordagainField.setCaretPosition(0);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void focusLost(FocusEvent e) {\r\n                if (String.valueOf(passwordagainField.getPassword()).isEmpty() || String.valueOf(passwordagainField.getPassword()).equals(\"***Please fill the Password Again***\") || String.valueOf(passwordagainField.getPassword()).equals(\"***Passwords doesn't match***\")) {\r\n                    passwordagainField.setEchoChar((char) 0);\r\n                    passwordagainField.setText(\"Enter Password Again\");\r\n                    passwordagainField.setForeground(Color.BLACK);\r\n                }\r\n            }\r\n        });\r\n\r\n        tf.addKeyListener(new KeyAdapter() {\r\n            @Override\r\n            public void keyPressed(KeyEvent e) {\r\n                if (String.valueOf(passwordagainField.getPassword()).equals(\"Enter Password Again\") || String.valueOf(passwordagainField.getPassword()).equals(\"***Please fill the Password Again***\") || String.valueOf(passwordagainField.getPassword()).equals(\"***Passwords doesn't match***\")) {\r\n                    passwordagainField.setText(\"\");\r\n                    passwordagainField.setEchoChar('\\u25cf');\r\n                    passwordagainField.setForeground(Color.BLACK);\r\n                }\r\n            }\r\n        });\r\n        tf.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                registerButton.doClick();\r\n            }\r\n        });\r\n    }\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(new NimbusLookAndFeel());\r\n        } catch (UnsupportedLookAndFeelException e) {\r\n            e.printStackTrace();\r\n        }\r\n        new RegisterForm();\r\n\r\n    }\r\n\r\n    //check empty all field\r\n    private boolean isEmptyFirstNameField(JTextField tf) {\r\n        return tf.getText().equals(\"First Name\")||tf.getText().equals(\"***Please fill the First Name***\");\r\n    }\r\n    private boolean isEmptyLasttNameField(JTextField tf) {\r\n        return tf.getText().equals(\"Last Name\")||tf.getText().equals(\"***Please fill the Last Name***\");\r\n    }private boolean isEmptyPhoneField(JTextField tf) {\r\n        return tf.getText().equals(\"Phone Number\")||tf.getText().equals(\"***Please fill the Phone Number***\");\r\n    }private boolean isEmptyEmailField(JTextField tf) {\r\n        return tf.getText().equals(\"Email\")||tf.getText().equals(\"***Please fill the Email***\");\r\n    }private boolean isEmptyUsernameField(JTextField tf) {\r\n        return tf.getText().equals(\"Username\")||tf.getText().equals(\"***Please fill the Username***\");\r\n    }private boolean isEmptyPasswordField(JTextField tf) {\r\n        return tf.getText().equals(\"Password\")||tf.getText().equals(\"***Please fill the Password***\");\r\n    }private boolean isEmptyPasswordAgainField(JTextField tf) {\r\n        return tf.getText().equals(\"Enter Password Again\")||tf.getText().equals(\"***Please fill the Password Again***\");\r\n    }\r\n    //check invalid\r\n    private boolean isValidPhoneNumber(String phoneNumber) {\r\n        return phoneNumber.matches(\"^0\\\\d{9}$\");\r\n    }\r\n    private boolean isValidEmail(String email) {\r\n        String emailRegex = \"^[a-zA-Z0-9+_\\\\-\\\\.]+@[a-zA-Z0-9+\\\\-]+\\\\.[a-zA-Z]{2,7}$\";\r\n        return email.matches(emailRegex);\r\n    }\r\n    private boolean hasLowerCase(String password) {\r\n        return password.matches(\".*[a-z].*\");\r\n    }\r\n\r\n    private boolean hasUpperCase(String password) {\r\n        return password.matches(\".*[A-Z].*\");\r\n    }\r\n\r\n    private boolean hasDigit(String password) {\r\n        return password.matches(\".*\\\\d.*\");\r\n    }\r\n\r\n    private boolean hasSpecialChar(String password) {\r\n        return password.matches(\".*[@#$%^&+=!_].*\");\r\n    }\r\n\r\n    private boolean hasMinLength(String password) {\r\n        return password.length() >= 8;\r\n    }\r\n    private boolean isValidPasswordField(JPasswordField passwordField) {\r\n        char[] passwordChars = passwordField.getPassword();\r\n        String password = new String(passwordChars);\r\n        // Explanation of regex:\r\n        // ^                 Start of string\r\n        // (?=.*[a-z])       At least one lowercase letter\r\n        // (?=.*[A-Z])       At least one uppercase letter\r\n        // (?=.*\\\\d)         At least one digit\r\n        // (?=.*[@#$%^&+=!_]) At least one special character from the given list\r\n        // .{8,}             Minimum length of 8 characters\r\n        // $                 End of string\r\n        return hasLowerCase(password) &&\r\n                hasUpperCase(password) &&\r\n                hasDigit(password) &&\r\n                hasSpecialChar(password) &&\r\n                hasMinLength(password);\r\n    }\r\n    private boolean passwordFieldMatches(JPasswordField passwordField1, JPasswordField passwordField2) {\r\n        return String.valueOf(passwordField1.getPassword()).equals(String.valueOf(passwordField2.getPassword()));\r\n    }\r\n    private boolean isUsernameDuplicate(String username) {\r\n        // Connect to the database and check if username exists\r\n        String sql1 = String.format(\"SELECT * FROM login WHERE username = '%d'\", username);\r\n        ResultSet rs1 = DBquery.getInstance().getSelect(sql1);\r\n        try {\r\n            if (rs1.next()) {\r\n//                if (username.equals(sql1) == )\r\n                return true;\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n//            dbConnect.disconnect(); // Disconnect from the database\r\n        }\r\n        return false;\r\n    }\r\n    private boolean isValidRegistration() {\r\n        // Check if all fields are filled correctly\r\n        return !isEmptyFirstNameField(firstNameField) &&\r\n               !isEmptyLasttNameField(lastNameField) &&\r\n               !isEmptyPhoneField(phoneNumberField) &&\r\n               !isEmptyEmailField(emailField) &&\r\n               !isEmptyUsernameField(usernameField) &&\r\n               !isEmptyPasswordField(passwordField) &&\r\n               !isEmptyPasswordAgainField(passwordagainField)&&\r\n               isValidPhoneNumber(phoneNumberField.getText()) &&\r\n               isValidEmail(emailField.getText()) &&\r\n               isValidPasswordField(passwordField) &&\r\n               isValidPasswordField(passwordagainField) &&\r\n               passwordFieldMatches(passwordField, passwordagainField); //&&\r\n//               !isUsernameDuplicate(usernameField.getText());  // Check if username is not duplicate\r\n    }\r\n    private void checkEmptyAndInvalidFields() {\r\n        if (isEmptyFirstNameField(firstNameField)) {\r\n            firstNameField.setText(\"***Please fill the First Name***\");\r\n            firstNameField.setForeground(Color.red);\r\n        }\r\n        if (isEmptyLasttNameField(lastNameField)) {\r\n            lastNameField.setText(\"***Please fill the Last Name***\");\r\n            lastNameField.setForeground(Color.red);\r\n        }\r\n        if (isEmptyPhoneField(phoneNumberField)) {\r\n            phoneNumberField.setText(\"***Please fill the Phone Number***\");\r\n            phoneNumberField.setForeground(Color.red);\r\n        }\r\n        else{\r\n            if (!isValidPhoneNumber(phoneNumberField.getText())) {\r\n                phoneNumberField.setText(\"***Invalid Phone Number***\");\r\n                phoneNumberField.setForeground(Color.red);\r\n            }\r\n        }\r\n        if (isEmptyEmailField(emailField)) {\r\n            emailField.setText(\"***Please fill the Email***\");\r\n            emailField.setForeground(Color.red);\r\n        }\r\n        else{\r\n            if (!isValidEmail(emailField.getText())) {\r\n                emailField.setText(\"***Invalid Email***\");\r\n                emailField.setForeground(Color.red);\r\n            }\r\n        }\r\n        if (isEmptyUsernameField(usernameField)) {\r\n            usernameField.setText(\"***Please fill the Username***\");\r\n            usernameField.setForeground(Color.red);\r\n        }\r\n        else{\r\n            if (isUsernameDuplicate(usernameField.getText())) {\r\n            JOptionPane.showMessageDialog(fr, \"Username already exists.\", null, JOptionPane.WARNING_MESSAGE);\r\n        }\r\n        }\r\n        if (isEmptyPasswordField(passwordField)) {\r\n            passwordField.setEchoChar((char) 0);\r\n            passwordField.setText(\"***Please fill the Password***\");\r\n            passwordField.setForeground(Color.red);\r\n        }\r\n        else{\r\n            if (!isValidPasswordField(passwordField)) {\r\n                passwordField.setEchoChar((char) 0);\r\n                passwordField.setText(\"***Invalid Password***\");\r\n                JOptionPane.showMessageDialog(fr, \"Password should contain at least 8 character with aA-zZ,0-9,and special charactor\", null, JOptionPane.WARNING_MESSAGE);\r\n                passwordField.setForeground(Color.red);\r\n            }\r\n        }\r\n        if (isEmptyPasswordAgainField(passwordagainField)) {\r\n            passwordagainField.setEchoChar((char) 0);\r\n            passwordagainField.setText(\"***Please fill the Password Again***\");\r\n            passwordagainField.setForeground(Color.red);\r\n        }\r\n        else{\r\n            if (!passwordFieldMatches(passwordField, passwordagainField)) {\r\n                passwordagainField.setEchoChar((char) 0);\r\n                passwordagainField.setText(\"***Passwords doesn't match***\");\r\n                passwordagainField.setForeground(Color.red);\r\n            }\r\n        }\r\n\r\n    }\r\n    private void styleTextField(JTextField tf){\r\n        tf.setOpaque(false);\r\n        tf.setForeground(Color.BLACK); // Set text color\r\n        tf.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLACK)); // Bottom border only\r\n        tf.setFont(new Font(\"Arial\", Font.PLAIN, 12));\r\n    }\r\n    private void stylePanel(JPanel p){\r\n        p.setOpaque(true);\r\n        p.setBackground(new Color(210, 224, 251));\r\n        p.setBorder(BorderFactory.createMatteBorder(0, 0, 0, 0, Color.BLACK)); // Bottom border only\r\n\r\n    }\r\n    private void stylePanelRegisPanel(JPanel p){\r\n        p.setPreferredSize(new Dimension(300, 40));\r\n        p.setOpaque(true);\r\n        p.setBackground(new Color(210, 224, 251));\r\n        p.setBorder(BorderFactory.createMatteBorder(0, 0, 0, 0, Color.BLACK));\r\n    }\r\n    private void styleButton(JButton b){\r\n        b.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n        b.setBackground(Color.BLACK);\r\n        b.setForeground(Color.ORANGE); // Set text color\r\n        b.setPreferredSize(new Dimension(150, 40));\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/net/handytrack/HANDYTRACKMAIN/RegisterForm.java b/src/net/handytrack/HANDYTRACKMAIN/RegisterForm.java
--- a/src/net/handytrack/HANDYTRACKMAIN/RegisterForm.java	(revision e602c0aa2885a5f138193952685a20d15d09304c)
+++ b/src/net/handytrack/HANDYTRACKMAIN/RegisterForm.java	(date 1711919398775)
@@ -14,7 +14,8 @@
     private JTextField firstNameField, lastNameField, phoneNumberField, emailField, usernameField;
     private JPasswordField passwordField, passwordagainField;
     private JButton registerButton, backToLogin;
-    private JPanel registerPanel, btnPanel, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12;
+    private JPanel registerPanel, btnPanel, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14;
+
 
 
     public RegisterForm(){
@@ -42,12 +43,18 @@
         p10 = new JPanel();
         p11 = new JPanel();
         p12 = new JPanel();
+        p13 = new JPanel();
+        p14 = new JPanel();
 
         p2.setPreferredSize(new Dimension(400, 40));
-        p3.setPreferredSize(new Dimension(50, 520));
-        p4.setPreferredSize(new Dimension(50, 520));
-        p5.setPreferredSize(new Dimension(400, 40));
-        registerPanel.setPreferredSize(new Dimension(300, 520));
+        p3.setPreferredSize(new Dimension(50, 560));
+        p4.setPreferredSize(new Dimension(50, 560));
+        p5.setPreferredSize(new Dimension(400, 80));
+        registerPanel.setPreferredSize(new Dimension(300, 560));
+
+        String[] items = {"Delivery Man", "Officer"};
+        JComboBox<String> combo;
+        combo = new JComboBox<>(items);
 
         // Set text field properties and listeners
         setConFirstNameField(firstNameField);
@@ -84,7 +91,7 @@
         styleButton(registerButton);
 
         registerPanel.setSize(400, 300);
-        registerPanel.setLayout(new GridLayout(13, 1));
+        registerPanel.setLayout(new GridLayout(15, 1));
         registerPanel.add(firstNameField);
         registerPanel.add(p6);
         registerPanel.add(lastNameField);
@@ -94,10 +101,12 @@
         registerPanel.add(emailField);
         registerPanel.add(p9);
         registerPanel.add(usernameField);
-        registerPanel.add(p11);
+        registerPanel.add(p10);
         registerPanel.add(passwordField);
-        registerPanel.add(p12);
+        registerPanel.add(p11);
         registerPanel.add(passwordagainField);
+        registerPanel.add(p12);
+        registerPanel.add(combo);
 
         p5.add(backToLogin);p5.add(registerButton);
         p1.setLayout(new BorderLayout());
@@ -108,7 +117,7 @@
         fr.add(p1);
         fr.setLocation(900, 200);
         fr.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
-        fr.setSize(400, 600);
+        fr.setSize(400, 680);
         fr.setResizable(false);
         fr.setVisible(true);
         //back to login action listener
@@ -483,12 +492,12 @@
     }
     private boolean isUsernameDuplicate(String username) {
         // Connect to the database and check if username exists
-        String sql1 = String.format("SELECT * FROM login WHERE username = '%d'", username);
-        ResultSet rs1 = DBquery.getInstance().getSelect(sql1);
+        String sql = String.format("SELECT * FROM login WHERE username = '%d'", username);
+        ResultSet rs1 = DBquery.getInstance().getSelect(sql);
         try {
             if (rs1.next()) {
-//                if (username.equals(sql1) == )
-                return true;
+                if (username.equals(sql))
+                    return true;
             }
         } catch (SQLException e) {
             e.printStackTrace();
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"00bdb3ab-7e66-4438-a7f7-8adc8ebe1973\" name=\"Changes\" comment=\"wasd\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/resources/DB.db\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/resources/DB.db\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/net/handytrack/psm/psm.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/net/handytrack/psm/psm.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/net/handytrack/type/Example.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/net/handytrack/type/Example.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/net/handytrack/type/FreezeTypeCreator.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/net/handytrack/type/FreezeTypeCreator.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/net/handytrack/type/NormalTypeCreator.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/net/handytrack/type/NormalTypeCreator.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/net/handytrack/type/TypeCreator.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/net/handytrack/type/TypeCreator.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/net/handytrack/type/product/FreezeType.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/net/handytrack/type/product/FreezeType.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/net/handytrack/type/product/NormalType.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/net/handytrack/type/product/NormalType.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/net/handytrack/type/product/Type.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/net/handytrack/type/product/TypeC.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;CapybaraCapybara&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"8bb20f0f-6121-4dfa-ad71-39c9bbff5f7d\" />\r\n        <option name=\"url\" value=\"https://github.com/66070271/HandyTrack.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 7\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2eQBug1I7OWKShm4zqqmxMp2yM6\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.HANDYTRACKMAIN.executor\": \"Run\",\r\n    \"Application.LoginGUI (1).executor\": \"Run\",\r\n    \"Application.LoginGUI (2).executor\": \"Run\",\r\n    \"Application.LoginGUI (3).executor\": \"Run\",\r\n    \"Application.LoginGUI (4).executor\": \"Run\",\r\n    \"Application.LoginGUI (5).executor\": \"Run\",\r\n    \"Application.LoginGUI.executor\": \"Run\",\r\n    \"Application.MMS (1).executor\": \"Run\",\r\n    \"Application.MMS.executor\": \"Run\",\r\n    \"Application.RegisterGUI.executor\": \"Run\",\r\n    \"Application.net.handytrack.Login.LoginGUI.executor\": \"Run\",\r\n    \"Application.psm (1).executor\": \"Run\",\r\n    \"Application.psm.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/marttpq/Desktop/HProJect/HandyTrack/resources/TimingFramework-0.55.jar\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"Modules\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\pleum\\IdeaProjects\\HandyTrack\\resources\\Picture\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\noras\\IdeaProjects\\HandyTrack\\src\\net\\handytrack\\psm\" />\r\n      <recent name=\"C:\\Users\\noras\\IdeaProjects\\HandyTrack\\src\\net\\handytrack\\manager\" />\r\n      <recent name=\"C:\\Users\\pleum\\IdeaProjects\\HandyTrack\\src\\net\\handytrack\\Login\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.psm (1)\">\r\n    <configuration name=\"LoginGUI (3)\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"net.handytrack.HANDYTRACKMAIN.LoginGUI\" />\r\n      <module name=\"HandyTrack\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"net.handytrack.HANDYTRACKMAIN.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MMS (1)\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"net.handytrack.manager.MMS\" />\r\n      <module name=\"HandyTrack\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"net.handytrack.manager.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MMS\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"net.handytrack.manager.MMS\" />\r\n      <module name=\"HandyTrack\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"net.handytrack.psm.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MMS\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"net.handytrack.manager.MMS\" />\r\n      <module name=\"HandyTrack\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"net.handytrack.psm.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"psm (1)\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"net.handytrack.psm.psm\" />\r\n      <module name=\"HandyTrack\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"net.handytrack.psm.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"psm\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"net.handytrack.psm.psm\" />\r\n      <module name=\"HandyTrack\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"net.handytrack.psm.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.psm (1)\" />\r\n        <item itemvalue=\"Application.MMS\" />\r\n        <item itemvalue=\"Application.MMS (1)\" />\r\n        <item itemvalue=\"Application.psm\" />\r\n        <item itemvalue=\"Application.MMS (1)\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-17.0.10-corretto-17.0.10-4caba194b151-5cd809f4\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"00bdb3ab-7e66-4438-a7f7-8adc8ebe1973\" name=\"Changes\" comment=\"\" />\r\n      <created>1711827146159</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1711827146159</updated>\r\n      <workItem from=\"1711827147318\" duration=\"6673000\" />\r\n      <workItem from=\"1711881258917\" duration=\"14423000\" />\r\n      <workItem from=\"1711896729547\" duration=\"67000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"wasd\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711885425182</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711885425182</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"wasd\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711887119497</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711887119497</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"wasd\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711887180884</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711887180884</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"wasd\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711887343340</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711887343340</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"wasd\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711887435562</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711887435562</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"wasd\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711887509749</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711887509749</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"wasd\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711897157211</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711897157211</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"wasd\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711897398341</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711897398341</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"z\" />\r\n    <MESSAGE value=\"wasd\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"wasd\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision e602c0aa2885a5f138193952685a20d15d09304c)
+++ b/.idea/workspace.xml	(date 1711919050685)
@@ -5,16 +5,17 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="00bdb3ab-7e66-4438-a7f7-8adc8ebe1973" name="Changes" comment="wasd">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_31_3_2567_17_34__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_31_3_2567_17_34__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_31_3_2567_19_34__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_31_3_2567_19_34__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_31_3_2567_21_26__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_31_3_2567_21_26__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_31_3_2567_2_39__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_31_3_2567_2_39__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_31_3_2567_3_08__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_31_3_2567_3_08__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_31_3_2567_3_10__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_31_3_2567_3_10__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_1_2024_1_27_AM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_1_2024_1_27_AM__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/resources/DB.db" beforeDir="false" afterPath="$PROJECT_DIR$/resources/DB.db" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/net/handytrack/psm/psm.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/net/handytrack/psm/psm.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/net/handytrack/type/Example.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/net/handytrack/type/Example.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/net/handytrack/type/FreezeTypeCreator.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/net/handytrack/type/FreezeTypeCreator.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/net/handytrack/type/NormalTypeCreator.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/net/handytrack/type/NormalTypeCreator.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/net/handytrack/type/TypeCreator.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/net/handytrack/type/TypeCreator.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/net/handytrack/type/product/FreezeType.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/net/handytrack/type/product/FreezeType.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/net/handytrack/type/product/NormalType.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/net/handytrack/type/product/NormalType.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/net/handytrack/type/product/Type.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/net/handytrack/type/product/TypeC.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/resources/Picture/LOGO.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/net/handytrack/HANDYTRACKMAIN/LoginGUI.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/net/handytrack/HANDYTRACKMAIN/LoginGUI.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/net/handytrack/HANDYTRACKMAIN/RegisterForm.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/net/handytrack/HANDYTRACKMAIN/RegisterForm.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -67,9 +68,9 @@
     "Application.LoginGUI.executor": "Run",
     "Application.MMS (1).executor": "Run",
     "Application.MMS.executor": "Run",
+    "Application.RegisterForm.executor": "Run",
     "Application.RegisterGUI.executor": "Run",
     "Application.net.handytrack.Login.LoginGUI.executor": "Run",
-    "Application.psm (1).executor": "Run",
     "Application.psm.executor": "Run",
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
@@ -98,7 +99,7 @@
       <recent name="C:\Users\pleum\IdeaProjects\HandyTrack\src\net\handytrack\Login" />
     </key>
   </component>
-  <component name="RunManager" selected="Application.psm (1)">
+  <component name="RunManager" selected="Application.RegisterForm">
     <configuration name="LoginGUI (3)" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="net.handytrack.HANDYTRACKMAIN.LoginGUI" />
       <module name="HandyTrack" />
@@ -151,12 +152,12 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="psm (1)" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="net.handytrack.psm.psm" />
+    <configuration name="RegisterForm" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="net.handytrack.HANDYTRACKMAIN.RegisterForm" />
       <module name="HandyTrack" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="net.handytrack.psm.*" />
+          <option name="PATTERN" value="net.handytrack.HANDYTRACKMAIN.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
@@ -179,7 +180,7 @@
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="Application.psm (1)" />
+        <item itemvalue="Application.RegisterForm" />
         <item itemvalue="Application.MMS" />
         <item itemvalue="Application.MMS (1)" />
         <item itemvalue="Application.psm" />
