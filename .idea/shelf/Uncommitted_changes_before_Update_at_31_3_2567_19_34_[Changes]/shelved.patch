Index: src/net/handytrack/HANDYTRACKMAIN/LoginGUI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package net.handytrack.HANDYTRACKMAIN;\r\n\r\nimport com.formdev.flatlaf.intellijthemes.materialthemeuilite.FlatMaterialLighterIJTheme;\r\nimport net.handytrack.database.DBquery;\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.border.Border;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\nimport java.sql.ResultSet;\r\n\r\npublic class LoginGUI {\r\n\r\n    //private DBConnect db;\r\n    private int userId;\r\n    private String name;\r\n    private String num;\r\n    private JFrame fr;\r\n    private JTextField usernameField;\r\n    private JPasswordField passwordField;\r\n    private JButton signinButton, signupButton, forgotPasswordButton;\r\n    private JLabel welcomeLabel, prolabel, locklabel, logolabel;\r\n    private JPanel pwel, ppro, ppas, plogo, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30;\r\n    private ImageIcon pro, scalepro, lock, scalelock, logo, scalelogo;\r\n    private HANDYTRACKMAIN hdm;\r\n\r\n    @SuppressWarnings(\"empty-statement\")\r\n    public LoginGUI() {\r\n        hdm = new HANDYTRACKMAIN();\r\n        fr = new JFrame(\"Handy Track's LOGIN\");\r\n        this.userId = userId;\r\n        prolabel = new JLabel();\r\n        locklabel = new JLabel();\r\n        logolabel = new JLabel();\r\n        welcomeLabel = new JLabel(\"Welcome to HANDY TRACK\", (int) Component.CENTER_ALIGNMENT);\r\n        welcomeLabel.setFont(new Font(\"Arial\", Font.BOLD, 24));\r\n        welcomeLabel.setOpaque(true);\r\n        welcomeLabel.setBackground(new Color(210, 224, 251));\r\n        //welcomeLabel.setBackground(new Color(210, 224, 251)); // Set bg color\r\n        welcomeLabel.setForeground(new Color(9, 55, 125)); // Set text color\r\n        usernameField = new JTextField(\"Username\");\r\n        usernameField.setColumns(15); // Set the desired length\r\n        usernameField.setOpaque(false);\r\n        usernameField.setForeground(Color.BLACK); // Set text color\r\n        usernameField.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLACK)); // Bottom border only\r\n        usernameField.addFocusListener(new FocusAdapter() {\r\n            @Override\r\n            public void focusGained(FocusEvent e) {\r\n                if (usernameField.getText().equals(\"Username\")) {\r\n                    usernameField.setCaretPosition(0);\r\n                }\r\n            }\r\n\r\n            public void focusLost() {\r\n            }\r\n\r\n            @Override\r\n            public void focusLost(FocusEvent e) {\r\n                if (usernameField.getText().isEmpty()) {\r\n                    usernameField.setText(\"Username\");\r\n                }\r\n            }\r\n        });\r\n        usernameField.addKeyListener(new KeyAdapter() {\r\n            @Override\r\n            public void keyPressed(KeyEvent e) {\r\n                if (usernameField.getText().equals(\"Username\")) {\r\n                    usernameField.setText(\"\");\r\n                }\r\n            }\r\n\r\n            public void keyReleased() {\r\n            }\r\n\r\n            public void keyPressed() {\r\n            }\r\n        });\r\n\r\n        passwordField = new JPasswordField();\r\n        passwordField.setColumns(15); // Set the desired length\r\n        passwordField.setOpaque(false);\r\n        passwordField.setForeground(Color.BLACK); // Set text color\r\n        passwordField.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLACK)); // Bottom border only\r\n        passwordField.setEchoChar((char) 0);\r\n        passwordField.setText(\"Password\");\r\n        passwordField.setEchoChar((char) 0);\r\n        passwordField.addFocusListener(new FocusAdapter() {\r\n            @Override\r\n            public void focusGained(FocusEvent e) {\r\n                if (String.valueOf(passwordField.getPassword()).equals(\"Password\")) {\r\n                    passwordField.setCaretPosition(0);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void focusLost(FocusEvent e) {\r\n                if (String.valueOf(passwordField.getPassword()).isEmpty()) {\r\n                    passwordField.setEchoChar((char) 0);\r\n                    passwordField.setText(\"Password\");\r\n                }\r\n            }\r\n        });\r\n\r\n        passwordField.addKeyListener(new KeyAdapter() {\r\n            @Override\r\n            public void keyPressed(KeyEvent e) {\r\n                if (String.valueOf(passwordField.getPassword()).equals(\"Password\")) {\r\n                    passwordField.setText(\"\");\r\n                    passwordField.setEchoChar('\\u25cf');\r\n                }\r\n            }\r\n        });\r\n\r\n        forgotPasswordButton = new JButton(\"forgot Password?\");\r\n        forgotPasswordButton.setContentAreaFilled(false);\r\n        forgotPasswordButton.setFont(new Font(\"Arial\", Font.BOLD, 10));\r\n        forgotPasswordButton.setForeground(Color.BLACK); // Set text color\r\n        forgotPasswordButton.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLACK)); // Set black border on the bottom\r\n        //forgotPasswordButton.setBorderPainted(false); \r\n        forgotPasswordButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                String input = JOptionPane.showInputDialog(fr, \"Contact the relevant person to request a key \\n\\n Enter organization's key\", \"Forgot Password\", JOptionPane.QUESTION_MESSAGE);\r\n                if (\"organization_key\".equals(input)) {\r\n                    JOptionPane.showMessageDialog(fr, \"Your password is: *******\");\r\n                } else {\r\n                    JOptionPane.showMessageDialog(fr, \"Wrong Password!!!\", \"Invalid organization's key\", JOptionPane.WARNING_MESSAGE);\r\n                }\r\n            }\r\n        });\r\n        forgotPasswordButton.addFocusListener(new FocusAdapter() {\r\n            @Override\r\n            public void focusGained(FocusEvent e) {\r\n                forgotPasswordButton.setForeground(Color.RED); // Set text color \r\n            }\r\n\r\n            @Override\r\n            public void focusLost(FocusEvent e) {\r\n                forgotPasswordButton.setForeground(Color.BLACK); // Set text color\r\n            }\r\n        });\r\n\r\n        signinButton = new JButton(\"Sign-in\");\r\n        signinButton.setFont(new Font(\"Arial\", Font.BOLD, 16));\r\n        signinButton.setForeground(Color.BLUE);\r\n        signinButton.setBackground(new Color(247, 195, 21));\r\n        signinButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if (e.getSource() == signinButton) {\r\n                    if (loginuser()) {\r\n                        JOptionPane.showMessageDialog(null, \"Login successful!\");\r\n                        hdm.getFrame().setVisible(true);\r\n                        fr.dispose();\r\n                    } else {\r\n                        JOptionPane.showMessageDialog(null, \"Invalid username or password\");\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        signupButton = new JButton(\"Sign-up\");\r\n        signupButton.setBackground(new Color(210, 224, 251));\r\n        signupButton.setFont(new Font(\"Arial\", Font.BOLD, 10));\r\n        signupButton.setForeground(Color.BLACK); // Set text color\r\n        signupButton.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLACK)); // Set black border on the bottom\r\n        signupButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                String input = JOptionPane.showInputDialog(fr, \"Contact the relevant person to request a key \\n\\n Enter organization's key\", \"Before Register\", JOptionPane.QUESTION_MESSAGE);\r\n\r\n                if (\"organization_key\".equals(input)) {\r\n                    RegisterGUI registerGUI = new RegisterGUI();\r\n                } else {\r\n                    JOptionPane.showMessageDialog(fr, \"Wrong Password!!!\", \"Invalid organization's key\", JOptionPane.WARNING_MESSAGE);\r\n                }\r\n            }\r\n        });\r\n        pwel = new JPanel();\r\n        ppro = new JPanel();\r\n        ppas = new JPanel();\r\n        plogo = new JPanel();\r\n        p1 = new JPanel();\r\n        p2 = new JPanel();\r\n        p3 = new JPanel();\r\n        p4 = new JPanel();\r\n        p5 = new JPanel();\r\n        p6 = new JPanel();\r\n        p7 = new JPanel();\r\n        p8 = new JPanel();\r\n        p9 = new JPanel();\r\n        p10 = new JPanel();\r\n        p11 = new JPanel();\r\n        p12 = new JPanel();\r\n        p13 = new JPanel();\r\n        p14 = new JPanel();\r\n        p15 = new JPanel();\r\n        p16 = new JPanel();\r\n        p17 = new JPanel();\r\n        p18 = new JPanel();\r\n        p19 = new JPanel();\r\n        p20 = new JPanel();\r\n        p21 = new JPanel();\r\n        p22 = new JPanel();\r\n        p23 = new JPanel();\r\n        p24 = new JPanel();\r\n        p25 = new JPanel();\r\n        p26 = new JPanel();\r\n        p27 = new JPanel();\r\n        p28 = new JPanel();\r\n        p29 = new JPanel();\r\n        p30 = new JPanel();\r\n\r\n        // Set preferred sizes for JLabels\r\n        prolabel.setPreferredSize(new Dimension(25, 25));\r\n        locklabel.setPreferredSize(new Dimension(25, 25));\r\n        logolabel.setPreferredSize(new Dimension(50, 50));\r\n\r\n        // Load image icons\r\n        pro = new ImageIcon(\"resources/Picture/user.png\");\r\n        lock = new ImageIcon(\"resources/Picture/lock.png\");\r\n        logo = new ImageIcon(\"resources/Picture/LOGO.png\");\r\n\r\n        // Scale image icons\r\n//        scalepro = ImageUtils.getScaledImageIcon(pro, prolabel.getPreferredSize().width, prolabel.getPreferredSize().height);\r\n//        scalelock = ImageUtils.getScaledImageIcon(lock, locklabel.getPreferredSize().width, locklabel.getPreferredSize().height);\r\n        // Set icons to JLabels\r\n        prolabel.setIcon(scalepro);\r\n        locklabel.setIcon(scalelock);\r\n        logolabel.setIcon(logo);\r\n\r\n        //////////STYLE GUI///////////////////////////////////////\r\n        Border shadowBorder = BorderFactory.createCompoundBorder(\r\n                BorderFactory.createLineBorder(Color.BLACK, 2), // shadow\r\n                BorderFactory.createEmptyBorder(10, 10, 10, 10)\r\n        );\r\n        p3.setBorder(shadowBorder);\r\n        p3.setBackground(Color.WHITE);\r\n        ppro.setBorder(BorderFactory.createMatteBorder(1, 1, 0, 1, Color.BLACK));\r\n        ppas.setBorder(BorderFactory.createMatteBorder(0, 1, 1, 1, Color.BLACK));\r\n        //p4.setBorder(BorderFactory.createMatteBorder(10, 0, 0, 0, Color.BLACK));\r\n        pwel.setOpaque(true);\r\n        pwel.setBackground(new Color(210, 224, 251));\r\n        plogo.setOpaque(true);\r\n        plogo.setBackground(new Color(210, 224, 251));\r\n        p1.setOpaque(true);\r\n        p1.setBackground(new Color(210, 224, 251));\r\n        p2.setOpaque(true);\r\n        p2.setBackground(new Color(210, 224, 251));\r\n        p5.setOpaque(true);\r\n        p5.setBackground(new Color(210, 224, 251));\r\n        p6.setOpaque(true);\r\n        p6.setBackground(new Color(210, 224, 251));\r\n        p7.setOpaque(true);\r\n        p7.setBackground(new Color(210, 224, 251));\r\n        p8.setOpaque(true);\r\n        p8.setBackground(new Color(210, 224, 251));\r\n        p9.setOpaque(true);\r\n        p9.setBackground(new Color(210, 224, 251));\r\n        p10.setOpaque(true);\r\n        p10.setBackground(new Color(210, 224, 251));\r\n        p11.setOpaque(true);\r\n        p11.setBackground(new Color(210, 224, 251));\r\n\r\n        pwel.setPreferredSize(new Dimension(350, 100));\r\n        p1.setPreferredSize(new Dimension(50, 200));\r\n        p2.setPreferredSize(new Dimension(50, 200));\r\n        p3.setPreferredSize(new Dimension(250, 100));\r\n        p4.setPreferredSize(new Dimension(350, 100));\r\n        p5.setPreferredSize(new Dimension(350, 25));\r\n        //p6.setPreferredSize(new Dimension(175, 50));\r\n        //p7.setPreferredSize(new Dimension(175, 50));\r\n        p8.setPreferredSize(new Dimension(120, 75));\r\n        p9.setPreferredSize(new Dimension(115, 75));\r\n        p10.setPreferredSize(new Dimension(115, 75));\r\n        // p11.setPreferredSize(new Dimension(350,50));\r\n        p7.add(forgotPasswordButton);\r\n        p11.add(signupButton);\r\n        plogo.add(logolabel);\r\n\r\n        ppro.add(prolabel);\r\n        ppro.add(usernameField);\r\n        ppas.add(locklabel);\r\n        ppas.add(passwordField);\r\n        p5.setLayout(new GridLayout(1, 1));\r\n//        p5.add(p6);\r\n        p5.add(p7);\r\n        p8.setLayout(new GridLayout(2, 1));\r\n        p8.add(signinButton);\r\n        p8.add(p11);\r\n\r\n        pwel.setLayout(new GridLayout(2, 1));\r\n        pwel.add(welcomeLabel);\r\n        pwel.add(plogo);\r\n\r\n        p3.setLayout(new GridLayout(2, 1));\r\n        p3.add(ppro);\r\n        p3.add(ppas);\r\n        p4.setLayout(new BorderLayout());\r\n        p4.add(p5, BorderLayout.NORTH);\r\n        p4.add(p8, BorderLayout.CENTER);\r\n        p4.add(p9, BorderLayout.WEST);\r\n        p4.add(p10, BorderLayout.EAST);\r\n\r\n        fr.setLayout(new BorderLayout());\r\n        fr.add(pwel, BorderLayout.NORTH);\r\n        fr.add(p1, BorderLayout.WEST);\r\n        fr.add(p2, BorderLayout.EAST);\r\n        fr.add(p3, BorderLayout.CENTER);\r\n        fr.add(p4, BorderLayout.SOUTH);\r\n\r\n        /////////////////////////////////////////////////////////////////\r\n        fr.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        fr.setSize(350, 400);\r\n        fr.setLocation(600, 200);\r\n        fr.setResizable(false);\r\n        fr.setVisible(true);\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(new FlatMaterialLighterIJTheme());\r\n        } catch (UnsupportedLookAndFeelException e) {\r\n            e.printStackTrace();\r\n        }\r\n        new LoginGUI();\r\n\r\n    }\r\n\r\n    public Boolean loginuser() {\r\n        String name = usernameField.getText();\r\n        String pass = new String(passwordField.getPassword());\r\n\r\n        String sql = String.format(\"SELECT * FROM login WHERE username = '%s' and password = '%s'\", name, pass);\r\n        ResultSet rs = DBquery.getInstance().getSelect(sql);\r\n        try {\r\n            if (rs.next()) {\r\n                userId = rs.getInt(\"iduser\"); // Store the userId if login is successful\r\n                String sql1 = String.format(\"SELECT * FROM login WHERE iduser = '%d'\", userId);\r\n                ResultSet rs1 = DBquery.getInstance().getSelect(sql1);\r\n                if (rs1.getString(\"password\").equals(pass)) {\r\n                    hdm.setKeyuser(this.userId);\r\n                    hdm.fetchUser();\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public int getuserId() {\r\n        return userId;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/net/handytrack/HANDYTRACKMAIN/LoginGUI.java b/src/net/handytrack/HANDYTRACKMAIN/LoginGUI.java
--- a/src/net/handytrack/HANDYTRACKMAIN/LoginGUI.java	(revision 8d72ef442ef920879557738f7529484b57c01b68)
+++ b/src/net/handytrack/HANDYTRACKMAIN/LoginGUI.java	(date 1711888454970)
@@ -1,6 +1,7 @@
 package net.handytrack.HANDYTRACKMAIN;
 
 import com.formdev.flatlaf.intellijthemes.materialthemeuilite.FlatMaterialLighterIJTheme;
+import net.handytrack.Login.RegisterForm;
 import net.handytrack.database.DBquery;
 
 import javax.swing.*;
@@ -167,10 +168,10 @@
         signupButton.addActionListener(new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
-                String input = JOptionPane.showInputDialog(fr, "Contact the relevant person to request a key \n\n Enter organization's key", "Before Register", JOptionPane.QUESTION_MESSAGE);
+                 String input = JOptionPane.showInputDialog(fr, "Contact the relevant person to request a key \n\n Enter organization's key", "Before Register", JOptionPane.QUESTION_MESSAGE);
 
                 if ("organization_key".equals(input)) {
-                    RegisterGUI registerGUI = new RegisterGUI();
+                    RegisterForm registerGUI = new RegisterForm();
                 } else {
                     JOptionPane.showMessageDialog(fr, "Wrong Password!!!", "Invalid organization's key", JOptionPane.WARNING_MESSAGE);
                 }
